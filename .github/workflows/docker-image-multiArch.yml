name: Publish Docker image (Multi-arch)
on:
  push:
    tags:
      - '*'
  workflow_dispatch:
    inputs:
      name:
        description: 'reason'
        required: false
        
jobs:
  push_to_ghcr:
    name: Push Docker image to GitHub Container Registry
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: linux/amd64,linux/arm64
          
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        
      - name: Save version info
        run: |
          if git describe --tags >/dev/null 2>&1; then
            git describe --tags > VERSION
            echo "Version: $(cat VERSION)"
          else
            echo "No tags found, using commit hash"
            git rev-parse --short HEAD > VERSION
            echo "Version: $(cat VERSION)"
          fi
          
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}
          tags: |
            type=ref,event=tag
            type=raw,value=latest
            
      - name: Build and push Docker image (Multi-arch)
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          
      - name: Output image info
        run: |
          echo "Built and pushed multi-arch images:"
          echo "${{ steps.meta.outputs.tags }}"
          echo "Supported platforms: linux/amd64, linux/arm64"